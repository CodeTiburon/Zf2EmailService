<?phpnamespace Zf2EmailService\Service;use Zend\Mail\Message;use Zend\Mail\Transport\Sendmail as SendmailTransport;use \Zend\View\Model\ViewModel;use Zend\ServiceManager\ServiceLocatorAwareInterface;use Zend\ServiceManager\ServiceLocatorInterface;class Email extends Message implements ServiceLocatorAwareInterface{    protected $template;    protected $templateVariables;    protected $isReady = false;    /**     * @var ServiceLocatorInterface     */    protected $serviceLocator;    /**     * @return ServiceLocatorInterface     */    public function getServiceLocator()    {        return $this->serviceLocator;    }    /**     * @param ServiceLocatorInterface $serviceLocator     */    public function setServiceLocator(ServiceLocatorInterface $serviceLocator)    {        $this->serviceLocator = $serviceLocator;        $this->initialize();    }    public function assign($spec, $value = '')    {        if (is_array($spec)) {            foreach ($spec as $key => $value) {                $this->templateVariables[$key] = $value;            }        } else {            $this->templateVariables[$spec] = $value;        }        return $this;    }    public function setTemplate($template)    {        $this->template = $template;        $this->reset();        return $this;    }    public function setVariables(Array $variables = array())    {        if (is_array($variables)) {            $this->templateVariables = $variables;        }        return $this;    }    public function reset()    {        $this->isReady = false;    }    public function getBodyText()    {        if (!$this->isReady) {            //Build template            /** @var \Zend\View\Model\ViewModel $view */            $view = new ViewModel();            $render = $this->serviceLocator->get('ViewRenderer');            try {                if (!empty($this->templateVariables)) {                    $view->setVariables($this->templateVariables);                }                $body = $render->render($view->setTemplate($this->template));                $this->setBody($body);            } catch (\Exception $e) {                throw new \Exception("Can't find template " . $this->template . '.phtml' . $e->getMessage());            }        }        return parent::getBodyText();    }    public function getSubject()    {        if (!$this->isReady) {            try {                /** @var \Zend\View\Model\ViewModel $view */                $view = new ViewModel();                $render = $this->serviceLocator->get('ViewRenderer');                $subject = $render->render($view->setTemplate($this->template . '.subj'));                $this->setSubject($subject);            } catch (\Exception $e) {                $this->setSubject('');            }        }        return parent::getSubject();    }    public function sendSmtp()    {        try {            $config = $this->serviceLocator->get('Config');            $this->getSubject();            $transport = isset($config['smtp']) ? $this->serviceLocator->get(                'Zend\Mail\Transport\Smtp'            ) : new SendmailTransport();            // Send forgot password message            $transport->send($this);            return true;        } catch (\Exception $e) {            return false;        }    }}